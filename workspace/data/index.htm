<!-- 
  FSWebServer - Example Index Page
  Copyright (c) 2015 Hristo Gochkov. All rights reserved.
  This file is part of the WebServer library for Arduino environment.
 
  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->
<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <title>ZS Stromlogger</title>
  <script type="text/javascript" src="graphs.js"></script>
  <script type="text/javascript">
    var heap,L1rms,L2rms,L3rms,freeSpace,L1max,L2max,L3max;
    var reloadPeriod = 1000;
    var factorValue = 100;
    var running = false;
    
    function loadValues(){
      if(!running) return;
      loadStatus();
      var xh = new XMLHttpRequest();
      xh.onreadystatechange = function(){
        if (xh.readyState == 4){
          if(xh.status == 200) {
            var res = JSON.parse(xh.responseText);
            L1rms.add(res.sensorData[0].rms/factorValue);
            L2rms.add(res.sensorData[1].rms/factorValue);
            L3rms.add(res.sensorData[2].rms/factorValue);
            L1max.add(res.sensorData[0].max/factorValue);
            L2max.add(res.sensorData[1].max/factorValue);
            L3max.add(res.sensorData[2].max/factorValue);
            if(running) setTimeout(loadValues, reloadPeriod);
          } else running = false;
        }
      };
      xh.open("GET", "/sensor", true);
      xh.send(null);
    };
    
    function loadStatus(){
        if(!running) return;
        var xh = new XMLHttpRequest();
        xh.onreadystatechange = function(){
          if (xh.readyState == 4){
            if(xh.status == 200) {
              var res = JSON.parse(xh.responseText);
              heap.add(res.heap);
              freeSpace.add(res.freeSpace);
            }
          }
        };
        xh.open("GET", "/status", true);
        xh.send(null);
      };
    
    function run(){
      if(!running){
        running = true;
        loadValues();
      }
    }
    
    function onBodyLoad(){
      var refreshInput = document.getElementById("refresh-rate");
      refreshInput.value = reloadPeriod;
      refreshInput.onchange = function(e){
        var value = parseInt(e.target.value);
        reloadPeriod = (value > 0)?value:0;
        e.target.value = reloadPeriod;
      }
      var factor = document.getElementById("factor");
      factor.value = factorValue;
      factor.onchange = function(e){
        var value = parseInt(e.target.value);
        factorValue = (value > 0)?value:0;
        e.target.value = factorValue;
      }
      var stopButton = document.getElementById("stop-button");
      stopButton.onclick = function(e){
        running = false;
      }
      var startButton = document.getElementById("start-button");
      startButton.onclick = function(e){
        run();
      }
      
      // Example with 10K thermistor
      //function calcThermistor(v) {
      //  var t = Math.log(((10230000 / v) - 10000));
      //  t = (1/(0.001129148+(0.000234125*t)+(0.0000000876741*t*t*t)))-273.15;
      //  return (t>120)?0:Math.round(t*10)/10;
      //}
      //temp = createGraph(document.getElementById("analog"), "Temperature", 100, 128, 10, 40, false, "cyan", calcThermistor);
      
      L1rms = createGraph(document.getElementById("L1rms"), "Strom L1 RMS", 100, 128, 0, 100, false, "yellow");
      L2rms = createGraph(document.getElementById("L2rms"), "Strom L2 RMS", 100, 128, 0, 100, false, "yellow");
      L3rms = createGraph(document.getElementById("L3rms"), "Strom L3 RMS", 100, 128, 0, 100, false, "yellow");
      
      L1max = createGraph(document.getElementById("L1max"), "Strom L1 MAX", 100, 128, 0, 150, false, "magenta");
      L2max = createGraph(document.getElementById("L2max"), "Strom L2 MAX", 100, 128, 0, 150, false, "magenta");
      L3max = createGraph(document.getElementById("L3max"), "Strom L3 MAX", 100, 128, 0, 150, false, "magenta");
      
      heap = createGraph(document.getElementById("heap"), "Current Heap", 100, 125, 0, 300000, true, "orange");
      freeSpace = createGraph(document.getElementById("freeSpace"), "free space", 100, 128, 0, 1500000, true, "green");
      
      run();
    }
  </script>
</head>
<body id="index" style="margin:0; padding:0;" onload="onBodyLoad()">
  <div id="controls" style="display: block; border: 1px solid rgb(68, 68, 68); padding: 5px; margin: 5px; width: 362px; background-color: rgb(238, 238, 238);">
    <label>Period (ms):</label>
    <input type="number" id="refresh-rate"/>
    <input type="button" id="start-button" value="Start"/>
    <input type="button" id="stop-button" value="Stop"/>
  </div>
  <div id="factor-block" style="display: block; border: 1px solid rgb(68, 68, 68); padding: 5px; margin: 5px; width: 362px; background-color: rgb(238, 238, 238);">
    <label>Faktor:</label>
    <input type="number" id="factor"/>
    <a href="http://192.168.4.1:81/getCSVData">Lade CSV-Daten</a>
  </div>
  <table>
   <tr>
    <th>L1</th>
    <th>L2</th>
    <th>L3</th>
   </tr>
   <tr>
   	<td><div id="L1rms"></div></td>
   	<td><div id="L2rms"></div></td>
   	<td><div id="L3rms"></div></td>
   	</tr>
   	<tr>
   	<td><div id="L1max"></div></td>
   	<td><div id="L2max"></div></td>
   	<td><div id="L3max"></div></td>
   	</tr>
   	</table>
   
  <a>System:</a>
  <div id="system" style="display: block; border: 1px solid rgb(68, 68, 68); padding: 5px; margin: 5px; width: 384px; background-color: rgb(238, 238, 238);">
  	<div id="heap"></div>  <div id="freeSpace"></div>
  </div>
</body>
</html>